package me.rebirthclient.mod.modules.impl.exploit;

import java.util.Comparator;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import me.rebirthclient.api.events.impl.PacketEvent;
import me.rebirthclient.mod.modules.Category;
import me.rebirthclient.mod.modules.Module;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityEnderPearl;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.server.SPacketSpawnObject;
import net.minecraftforge.fml.common.eventhandler.EventPriority;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class FakePearl
extends Module {
    private final Queue<CPacketPlayer> packets = new ConcurrentLinkedQueue<>();
    private int thrownPearlId = -1;

    public FakePearl() {
        super("FakePearl", "T\u7709rkiye exploit", Category.EXPLOIT);
    }

    @Override
    public void onTick() {
        if (this.thrownPearlId != -1) {
            for (Entity entity : FakePearl.mc.world.loadedEntityList) {
                if (entity.getEntityId() != this.thrownPearlId || !(entity instanceof EntityEnderPearl)) continue;
                EntityEnderPearl pearl = (EntityEnderPearl)entity;
                if (!pearl.isDead) continue;
                this.thrownPearlId = -1;
            }
        } else if (!this.packets.isEmpty()) {
            do {
                FakePearl.mc.player.connection.sendPacket(this.packets.poll());
            } while (!this.packets.isEmpty());
        }
    }

    @SubscribeEvent(priority=EventPriority.HIGHEST)
    public void onReceivePacket(PacketEvent.Receive event) {
        SPacketSpawnObject packet;
        if (FakePearl.fullNullCheck()) {
            return;
        }
        if (event.isCanceled()) {
            return;
        }
        if (event.getPacket() instanceof SPacketSpawnObject && (packet = event.getPacket()).getType() == 65) {
            FakePearl.mc.world.playerEntities.stream().min(Comparator.comparingDouble(p -> p.getDistance(packet.getX(), packet.getY(), packet.getZ()))).ifPresent(player -> {
                if (player.equals(FakePearl.mc.player)) {
                    if (!FakePearl.mc.player.onGround) {
                        return;
                    }
                    FakePearl.mc.player.motionX = 0.0;
                    FakePearl.mc.player.motionY = 0.0;
                    FakePearl.mc.player.motionZ = 0.0;
                    FakePearl.mc.player.movementInput.moveForward = 0.0f;
                    FakePearl.mc.player.movementInput.moveStrafe = 0.0f;
                    FakePearl.mc.player.connection.sendPacket(new CPacketPlayer.Position(FakePearl.mc.player.posX, FakePearl.mc.player.posY + 1.0, FakePearl.mc.player.posZ, false));
                    this.thrownPearlId = packet.getEntityID();
                }
            });
        }
    }

    @SubscribeEvent
    public void onPacketSend(PacketEvent.Send event) {
        if (this.thrownPearlId != -1 && event.getPacket() instanceof CPacketPlayer) {
            CPacketPlayer packet = event.getPacket();
            this.packets.add(packet);
            event.setCanceled(true);
        }
    }
}

