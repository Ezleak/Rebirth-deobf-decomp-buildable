package me.rebirthclient.mod.modules.impl.exploit;

import me.rebirthclient.mod.modules.Category;
import me.rebirthclient.mod.modules.Module;
import me.rebirthclient.mod.modules.impl.movement.Sprint;
import me.rebirthclient.mod.modules.settings.Setting;
import net.minecraft.entity.Entity;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.math.MathHelper;

public class Clip
extends Module {
    public static Clip INSTANCE;
    private final Setting<Integer> delay = this.add(new Setting<>("delay", 5, 1, 10));
    private final Setting<Integer> timeout = this.add(new Setting<>("Timeout", 5, 1, 20));
    private int packets;
    int ticks = 0;

    public Clip() {
        super("Clip", "Clips into blocks nearby to prevent crystal damage", Category.EXPLOIT);
        INSTANCE = this;
    }

    @Override
    public void onDisable() {
        this.packets = 0;
        this.ticks = 0;
    }

    @Override
    public String getInfo() {
        return String.valueOf(this.packets);
    }

    @Override
    public void onUpdate() {
        if (Sprint.isMoving()) {
            this.ticks = 0;
            return;
        }
        ++this.ticks;
        if (this.ticks > this.timeout.getValue()) {
            return;
        }
        if (Clip.mc.world.getCollisionBoxes(Clip.mc.player, Clip.mc.player.getEntityBoundingBox().grow(0.01, 0.0, 0.01)).size() < 2) {
            Clip.mc.player.setPosition(this.roundToClosest(Clip.mc.player.posX, Math.floor(Clip.mc.player.posX) + 0.301, Math.floor(Clip.mc.player.posX) + 0.699), Clip.mc.player.posY, this.roundToClosest(Clip.mc.player.posZ, Math.floor(Clip.mc.player.posZ) + 0.301, Math.floor(Clip.mc.player.posZ) + 0.699));
            this.packets = 0;
        } else if (Clip.mc.player.ticksExisted % this.delay.getValue() == 0) {
            Clip.mc.player.setPosition(Clip.mc.player.posX + MathHelper.clamp(this.roundToClosest(Clip.mc.player.posX, Math.floor(Clip.mc.player.posX) + 0.241, Math.floor(Clip.mc.player.posX) + 0.759) - Clip.mc.player.posX, -0.03, 0.03), Clip.mc.player.posY, Clip.mc.player.posZ + MathHelper.clamp(this.roundToClosest(Clip.mc.player.posZ, Math.floor(Clip.mc.player.posZ) + 0.241, Math.floor(Clip.mc.player.posZ) + 0.759) - Clip.mc.player.posZ, -0.03, 0.03));
            Clip.mc.player.connection.sendPacket(new CPacketPlayer.Position(Clip.mc.player.posX, Clip.mc.player.posY, Clip.mc.player.posZ, true));
            Clip.mc.player.connection.sendPacket(new CPacketPlayer.Position(this.roundToClosest(Clip.mc.player.posX, Math.floor(Clip.mc.player.posX) + 0.23, Math.floor(Clip.mc.player.posX) + 0.77), Clip.mc.player.posY, this.roundToClosest(Clip.mc.player.posZ, Math.floor(Clip.mc.player.posZ) + 0.23, Math.floor(Clip.mc.player.posZ) + 0.77), true));
            ++this.packets;
        }
    }

    private double roundToClosest(double num, double low, double high) {
        double d2 = high - num;
        double d1 = num - low;
        if (d2 > d1) {
            return low;
        }
        return high;
    }
}

